// Copyright 2025 xiahua <xhxiangshuijiao.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is github.com/xiahuaxiahua0616/miniblog. The professional

syntax = "proto3"; // 告诉编译器此文件使用什么版本的语法

package v1;

// 提供用于定义 HTTP 映射的功能，比如通过 option (google.api.http) 实现 gRPC 到 HTTP 的映射
import "google/api/annotations.proto";
// 提供了一个标准的空消息类型 google.protobuf.Empty，适用于 RPC 方法不需要输入消息或输出消息的场景
import "google/protobuf/empty.proto";
// 定义当前服务所依赖的健康检查消息
import "apiserver/v1/healthz.proto";
// 为生成 OpenAPI 文档提供相关注释（如标题、版本、作者、许可证等信息）
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/xiahuaxiahua0616/miniblog/pkg/api/apiserver/v1;v1";

// OpenAPI 全局配置，提供详细配置信息，用于生成 OpenAPI 文档
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        // API名称
        title: "miniblog API";
        // API版本
        version: "1.0";
        // API 描述
        description: "";
        // 开发者的联系方式，包括项目名称、网址和电子邮件
        contact: {
            name: "小而美的博客项目";
            url: "https://github.com/xiahuaxiahua0616/miniblog";
            email: "xhxiangshuijiao@163.com";
        };
        // 可信息和链接（这里使用 MIT License）
        license: {
            name: "MIT License";
            url: "https://github.com/xiahuaxiahua0616/miniblog/blob/master/LICENSE";
        };
    };
    //  指定访问协议为 HTTPS
    schemes: HTTPS;
    // 定义了服务的请求和响应的数据格式为 application/json
    consumes: "application/json";
    produces: "application/json";
};

// MiniBlog 定义了一个 MiniBlog RPC 服务
service MiniBlog {
    // Healthz 健康检查
    rpc Healthz(google.protobuf.Empty) returns (HealthzResponse) {
        // 通过 google.api.http 注释，指定HTTP方法为GET、URL路径为/healthz
        option(google.api.http) = {
            get: "/healthz",
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // 在 OpenAPI 文档中的接口简要描述，为“服务健康检查”
            summary: "服务健康检查";
            // 标识该操作的唯一ID，为“Healthz”
            operation_id: "Healthz";
            // 将该接口归类为“服务治理”
            tags: "服务治理";
        };
    }
}

// UpdatePostRequest 表示更新文章请求
message UpdatePostRequest {
    // postID 表示要更新的文章 ID，对应 {postID}
    string postID = 1;
    // title 表示更新后的博客标题
    optional string title = 2;
    // content 表示更新后的博客内容
    optional string content = 3;
}

// UpdatePostResponse 表示更新文章响应
message UpdatePostResponse {
}